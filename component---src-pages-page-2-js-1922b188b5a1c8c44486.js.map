{"version":3,"sources":["webpack:///./src/pages/Page2.js"],"names":["Page2","state","myFunction","props","updateItem","calculatetotal","name","event","inputvalue","target","value","id","setState","currentstate","this","el","hasOwnProperty","parseFloat","componentDidMount","location","data","render","components","console","log","limit","parseInt","pleasant","input","i","push","key","className","aria-label","align","min","type","onChange","e","sum","count","currentinputvalues","to","disabled","Component","defaultProps"],"mappings":"uJAKMA,E,4JACFC,MAAQ,G,EAaRC,WAAa,WACT,EAAKC,MAAMC,WAAW,EAAKH,Q,EAG/BI,eAAiB,SAACC,EAAMC,GAAW,IAAD,EAE1BC,EAAaD,EAAME,OAAOC,MAC1BC,EAAKL,EAET,EAAKM,WAAL,MAAiBD,GAAKH,EAAtB,IAAoC,WAEhC,IAAIK,EAAeC,KAAKb,MAIxB,IAAK,IAAIc,KAAMF,EAEPA,EAAaG,eAAeD,IAErBE,WAAWJ,EAAaE,Q,oHA5B/CG,kBAAA,WACqBJ,KAAKX,MAAMgB,SAASlB,MAAMmB,M,EAyC/CC,OAAA,WAAU,IAAD,OACDC,EAAa,GAEjB,GAAIR,KAAKX,MAAMgB,SAASlB,MAAO,CAC5BsB,QAAQC,IAAI,cAAeV,KAAKX,MAAMgB,UAMzC,IAHA,IAAIM,EAAQC,SAASZ,KAAKX,MAAMgB,SAASlB,MAAM0B,UAJhB,aAS3B,IAAIC,EAAQ,QAAUC,EAEtBP,EAAWQ,KACP,yBAAKC,IAAKF,GAEN,2BAAOG,UAAU,UAAjB,QAAiCH,EAAjC,MAEA,2BAAOI,aAAW,cAAcC,MAAM,QAAQF,UAAU,aAAaG,IAAK,EAAGC,KAAK,SAAS9B,KAAMsB,EAAOS,SAAU,SAACC,GAAD,OAAO,EAAKjC,eAAeuB,EAAOU,SATvJT,EAAI,EAAGA,EAAIJ,EAAQ,EAAGI,IAAM,IAoBrC,IAAIU,EAAM,EACNC,EAAQ,EAERC,EAAqB3B,KAAKb,MAE9B,IAAK,IAAIc,KAAM0B,EAEXD,GAAS,EAGLC,EAAmBzB,eAAeD,KAEJ,KAA3B0B,EAAmB1B,KACtByB,GAAS,GAETD,GAAOtB,WAAWwB,EAAmB1B,KAY7C,OACI,yBAAKiB,UAAU,OACX,sCACA,yBAAKA,UAAU,aAEX,kBAAC,IAAD,CAAab,SAAU,IAEvB,yBAAKa,UAAU,cACVV,GAGL,yBAAKU,UAAU,eAGX,kBAAC,IAAD,CAAMU,GAAG,UAAS,4BAAQV,UAAU,cAAlB,UAElB,kBAAC,IAAD,CAAMU,GAAG,UAAS,4BAAQC,SAAUJ,EAAM,KAAOC,EAvErD,EAuEoER,UAAU,UAAxD,c,GAxHtBY,aAkIpB5C,EAAM6C,aAAe,CACjB1B,SAAU,IAICnB","file":"component---src-pages-page-2-js-1922b188b5a1c8c44486.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Progressbar from '../components/Progressbar'\r\nimport { Link } from \"gatsby\"\r\n\r\n\r\nclass Page2 extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const pleasant = this.props.location.state.data\r\n       \r\n    }\r\n\r\n\r\n\r\n   \r\n\r\n    myFunction = () => {\r\n        this.props.updateItem(this.state)\r\n    }\r\n\r\n    calculatetotal = (name, event) => {\r\n        \r\n        let inputvalue = event.target.value\r\n        let id = name\r\n       \r\n        this.setState({ [id]: inputvalue }, function () {\r\n\r\n            let currentstate = this.state\r\n             \r\n            var sum = 0;\r\n           \r\n            for (var el in currentstate) {\r\n               \r\n                if (currentstate.hasOwnProperty(el)) {\r\n                   \r\n                    sum += parseFloat(currentstate[el]);\r\n                    \r\n                }\r\n            }\r\n        })\r\n\r\n       \r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let components = [];\r\n        let limit = 0\r\n        if (this.props.location.state) {\r\n           console.log('new stuff: ', this.props.location)\r\n        \r\n       \r\n        let limit = parseInt(this.props.location.state.pleasant)\r\n       \r\n        //let components = [];\r\n        for (var i = 1; i < limit + 1; i++) {\r\n           \r\n            let input = 'input' + i\r\n\r\n            components.push(\r\n                <div key={i}>\r\n\r\n                    <label className=\"labels\" >Part {i}% </label>\r\n\r\n                    <input aria-label=\"inputvalues\" align=\"right\" className=\"inputboxes\" min={0} type=\"number\" name={input} onChange={(e) => this.calculatetotal(input, e)} />\r\n\r\n                </div>);\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        var sum = 0\r\n        var count = 0\r\n       \r\n        let currentinputvalues = this.state\r\n        \r\n        for (var el in currentinputvalues) {\r\n            \r\n            count += 1\r\n\r\n           \r\n            if (currentinputvalues.hasOwnProperty(el)) {\r\n              \r\n               if (currentinputvalues[el] === \"\") {\r\n                count -= 1\r\n            }\r\n                sum += parseFloat(currentinputvalues[el]);\r\n               \r\n            }\r\n          }\r\n        \r\n        }\r\n\r\n        else{\r\n\r\n        }\r\n\r\n      \r\n        return (\r\n            <div className=\"App\">\r\n                <h1>Page 2</h1>\r\n                <div className=\"container\">                   \r\n\r\n                    <Progressbar location={2} />\r\n            \r\n                    <div className=\"container2\">\r\n                        {components}\r\n                       \r\n                    </div>\r\n                    <div className=\"buttongroup\">\r\n\r\n                     \r\n                        <Link to='/Page1'><button className=\"backbutton\" >Back </button></Link>\r\n                       \r\n                        <Link to='/Page3'><button disabled={sum < 100 || count < limit} className=\"button\" >Next </button></Link>\r\n                        \r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPage2.defaultProps = {\r\n    location: {\r\n        \r\n    }\r\n}\r\nexport default Page2;"],"sourceRoot":""}